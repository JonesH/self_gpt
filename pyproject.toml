[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "shell_gpt"
description = "A command-line productivity tool powered by large language models, will help you accomplish your tasks faster and more efficiently."
keywords = ["shell", "gpt", "openai", "ollama", "cli", "productivity", "cheet-sheet"]
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [{ name = "Farkhod Sadykov", email = "farkhod@sadykov.dev" }]
dynamic = ["version"]
classifiers = [
    "Operating System :: OS Independent",
    "Topic :: Software Development",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "openai >= 1.34.0, < 2.0.0",
    "typer>=0.9.4",
    "click >= 7.1.1, < 9.0.0",
    "rich >= 13.1.0, < 14.0.0",
    "distro >= 1.8.0, < 2.0.0",
    "instructor >= 0.4.5, < 1.0.0",
    'pyreadline3 >= 3.4.1, < 4.0.0; sys_platform == "win32"',
    "watchfiles>=0.24.0",
    "gpt-magic>=0.2.0",
    "python-dotenv>=1.0.1",
    "ripgrepy>=2.0.0",
    "tavily-python>=0.5.0",
    "tiktoken>=0.8.0",
]

[project.optional-dependencies]
litellm = [
    "litellm == 1.42.5"
]
dev = [
    "ruff==0.7.3",
    "pre-commit >= 3.1.1, < 4.0.0",
    "jupyter-console>=6.6.3",
    "pytest>=8.3.3",
    "mypy>=1.13.0",
    "requests-mock[fixture] >= 1.10.0, < 2.0.0",
    "types-requests == 2.28.11.17",
    "codespell  >= 2.2.5, < 3.0.0",
    "ipykernel>=6.29.5",
    "jupyter>=1.1.1",
    "notebook>=7.2.2",
    "qtconsole>=5.6.1",
]

[project.scripts]
sgpt = "sgpt:cli"

[project.urls]
homepage = "https://github.com/ther1d/shell_gpt"
repository = "https://github.com/ther1d/shell_gpt"
documentation = "https://github.com/TheR1D/shell_gpt/blob/main/README.md"

[tool.hatch.version]
path = "sgpt/__version__.py"

[tool.hatch.build.targets.wheel]
only-include = ["sgpt"]

[tool.hatch.build.targets.sdist]
only-include = [
    "sgpt",
    "tests",
    "README.md",
    "LICENSE",
    "pyproject.toml",
]

[tool.mypy]
exclude = ["llm_functions"]
python_version = "3.11"
strict = true
pretty = true

[tool.ruff]
lint.select = [
    "E",  # pycodestyle errors.
    "W",  # pycodestyle warnings.
    "F",  # pyflakes.
    "C",  # flake8-comprehensions.
    "B",  # flake8-bugbear.
    "I",  # enable import related rules (e.g. isort)
    "UP", # Enable rules for unused variables, etc.
]
lint.ignore = [
    "E501",  # line too long, handled by black.
    "C901",  # too complex.
    "B008",  # do not perform function calls in argument defaults.
    "E731",  # do not assign a lambda expression, use a def.
]

[tool.codespell]
skip = '.git,venv'

[tool.pdm]
distribution = false

[tool.pdm.scripts]
depgraph = { cmd = "ruff analyze graph" }
lint = { cmd = "ruff check --select I --fix ." }
format = { cmd = "ruff format --fix ." }
autofix = { composite = ["lint", "format"] }
mypy = { cmd = "mypy -p sgpt", env_file = ".env" }
mypy-test = { cmd = "mypy -p tests" }
tests = { cmd = "pytest tests" }
all = { composite = ["lint", "format", "mypy", "mypy-test", "tests"], keep_going = true }

